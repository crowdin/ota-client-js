"use strict";(self.webpackChunk_crowdin_ota_client_js_website=self.webpackChunk_crowdin_ota_client_js_website||[]).push([[203],{9110:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"releases/migration-1","title":"Migration from 0.x to 1.x","description":"Since the distribution manifest.json now returns the content node with all file paths, there is no need to manually calculate file paths based on language placeholders and mapping. This eliminates extra work and makes the library simpler and faster.","source":"@site/docs/releases/migration-1.mdx","sourceDirName":"releases","slug":"/releases/migration-1","permalink":"/ota-client-js/releases/migration-1","draft":false,"unlisted":false,"editUrl":"https://github.com/crowdin/ota-client-js/tree/main/website/docs/releases/migration-1.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Types","permalink":"/ota-client-js/api/Types"},"next":{"title":"Migration from 1.x to 2.x","permalink":"/ota-client-js/releases/migration-2"}}');var s=t(4848),a=t(8453);const r={},o="Migration from 0.x to 1.x",l={},c=[];function d(e){const n={code:"code",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"migration-from-0x-to-1x",children:"Migration from 0.x to 1.x"})}),"\n",(0,s.jsxs)(n.p,{children:["Since the distribution ",(0,s.jsx)(n.code,{children:"manifest.json"})," now returns the ",(0,s.jsx)(n.code,{children:"content"})," node with all file paths, there is no need to manually calculate file paths based on language placeholders and mapping. This eliminates extra work and makes the library simpler and faster."]}),"\n",(0,s.jsx)(n.p,{children:"Also, the Crowdin Languages API request is no longer needed, which will reduce traffic and improve performance."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Removed some redundant OTA JS client functions:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"listFiles"})," (replaced by ",(0,s.jsx)(n.code,{children:"getContent"})," which returns files per language)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getReplacedLanguages"})," (no manipulations with languages anymore)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getReplacedFiles"})," (no manipulations with languages anymore)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getLanguageObjects"})," (no manipulations with languages anymore)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getLanguageMappings"})," (no manipulations with languages anymore)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"getCustomLanguages"})," (no manipulations with languages anymore)"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Also, the ",(0,s.jsx)(n.code,{children:"file"})," argument has been removed from several functions. It is still possible to get translations for a specific file using the ",(0,s.jsx)(n.code,{children:"getFileTranslations"})," method (file path must be provided, which is returned by the ",(0,s.jsx)(n.code,{children:"getContent"})," method)."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(6540);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);