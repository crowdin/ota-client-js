"use strict";(self.webpackChunk_crowdin_ota_client_js_website=self.webpackChunk_crowdin_ota_client_js_website||[]).push([[110],{3215:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"quick-start","title":"Quick Start","description":"Creating a distribution","source":"@site/docs/quick-start.mdx","sourceDirName":".","slug":"/quick-start","permalink":"/ota-client-js/quick-start","draft":false,"unlisted":false,"editUrl":"https://github.com/crowdin/ota-client-js/tree/main/website/docs/quick-start.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Installation","permalink":"/ota-client-js/installation"},"next":{"title":"Configuration","permalink":"/ota-client-js/configuration"}}');var r=t(4848),o=t(8453);const s={},l="Quick Start",a={},c=[{value:"Creating a distribution",id:"creating-a-distribution",level:2},{value:"Usage",id:"usage",level:2},{value:"JSON Content",id:"json-content",level:3},{value:"Other examples",id:"other-examples",level:3},{value:"Further reading",id:"further-reading",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...n.components},{Details:t}=e;return t||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"quick-start",children:"Quick Start"})}),"\n",(0,r.jsx)(e.h2,{id:"creating-a-distribution",children:"Creating a distribution"}),"\n",(0,r.jsx)(e.p,{children:"Distribution is a CDN vault that mirrors the translated content of your project. Thanks to the CDN (Content Delivery Network), the translated content will become available to users much faster."}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://support.crowdin.com/content-delivery/",children:"Creating a distribution in crowdin.com"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"https://support.crowdin.com/enterprise/content-delivery/",children:"Creating a distribution in Crowdin Enterprise"})}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(e.h3,{id:"json-content",children:"JSON Content"}),"\n",(0,r.jsx)(e.p,{children:"Example of loading strings from JSON files:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"import otaClient from '@crowdin/ota-client';\n\nconst hash = '{distribution_hash}';\n\nconst client = new otaClient(hash);\n\n// will return all translation strings for all languages from all json files\nclient.getStrings()\n  .then(res => {\n    // get needed translation by language + key\n    console.log(res.uk.application.title);\n  })\n  .catch(error => console.error(error));\n\n// or get exact translation by key\nclient.getStringByKey(['application', 'title'], 'uk')\n  .then(title => console.log(title))\n  .catch(error => console.error(error));\n\n// or define a global language and not pass it everywhere\nclient.setCurrentLocale('uk');\nclient.getStringByKey(['application', 'title'])\n  .then(title => console.log(title))\n  .catch(error => console.error(error));\n"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.a,{href:"https://runkit.com/andrii-bodnar/crowdin-ota-js-client-live-demo",children:(0,r.jsx)(e.strong,{children:"Live Demo"})}),"."]}),"\n",(0,r.jsx)(e.h3,{id:"other-examples",children:"Other examples"}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Typescript"}),(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"import otaClient from '@crowdin/ota-client';\n\n// distribution hash\nconst hash = '{distribution_hash}';\n\n// initialization of crowdin ota client\nconst client = new otaClient(hash);\n\n// get content info in distribution\nclient.getContent()\n  .then(content => console.log(content))\n  .catch(error => console.error(error));\n\n// one of files for fr language from client.getContent\nconst file = '/content/fr/file.json';\n// get file translations\nclient.getFileTranslations(file)\n  .then(translations => console.log(translations))\n  .catch(error => console.error(error));\n"})})]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Javascript ES6 modules"}),(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"import otaClient from '@crowdin/ota-client';\n// or const otaClient = require('./out/index.js').default;\n\n// distribution hash\nconst hash = '{distribution_hash}';\n\n// initialization of crowdin ota client\nconst client = new otaClient(hash);\n\n// get content info in distribution\nclient.getContent()\n  .then(content => console.log(content))\n  .catch(error => console.error(error));\n\n// one of files for fr language from client.getContent\nconst file = '/content/fr/file.json';\n// get file translations\nclient.getFileTranslations(file)\n  .then(translations => console.log(translations))\n  .catch(error => console.error(error));\n"})})]}),"\n",(0,r.jsxs)(t,{children:[(0,r.jsx)("summary",{children:"Javascript CommonJS"}),(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"const otaClient = require('@crowdin/ota-client').default;\n\n// distribution hash\nconst hash = '{distribution_hash}';\n\n// initialization of crowdin ota client\nconst client = new otaClient(hash);\n\n// get content info in distribution\nclient.getContent()\n  .then(content => console.log(content))\n  .catch(error => console.error(error));\n\n// one of files for fr language from client.getContent\nconst file = '/content/fr/file.json';\n// get file translations\nclient.getFileTranslations(file)\n  .then(translations => console.log(translations))\n  .catch(error => console.error(error));\n"})})]}),"\n",(0,r.jsx)(e.h2,{id:"further-reading",children:"Further reading"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"/configuration",children:"Configuration"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"/api/index.Class.OtaClient",children:"API"})}),"\n"]})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>s,x:()=>l});var i=t(6540);const r={},o=i.createContext(r);function s(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:s(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);